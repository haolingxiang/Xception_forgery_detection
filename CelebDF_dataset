import os
import numpy as np
import torch
from torch.utils.data import Dataset, DataLoader
import cv2
from torchvision import transforms


class CelebDFDataset(Dataset):

    def __init__(self, root_dir, transform=None):
        self.root_dir = root_dir
        self.transform = transform
        self.classes = os.listdir(root_dir)

    def __len__(self):
        return len(os.listdir(self.root_dir))

    def __getitem__(self, idx):
        class_name = self.classes[idx]
        class_dir = os.path.join(class_name)
        video_files = os.listdir(class_dir)
        video_file = np.random.choice(video_files)
        video_path = os.path.join(class_dir, video_file)
        cap = cv2.VideoCapture(video_path)
        frames = []
        while True:
            ret, frame = cap.read()
            if not ret:
                break
            frame = cv2.cvtColor(frame, cv2.COLOR_BGR2YCrCb)
            if self.transform:
                frame = self.transform(frame)
            frames.append(frame)
        cap.release()
        label = int(class_name == 'positive')
        return torch.stack(frames), label


# 定义数据预处理
transform = transforms.Compose(
    [transforms.Resize(256),
     transforms.CenterCrop(224),
     transforms.ToTensor(),
     transforms.Normalize(mean=[0.485, 0.456, 0.406],
                          std=[0.229, 0.224, 0.225])])


